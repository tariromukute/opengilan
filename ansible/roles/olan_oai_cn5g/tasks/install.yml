- name: Pull ubuntu:bionic image
  community.docker.docker_image:
    name: ubuntu:bionic
    source: pull
    # Select platform for pulling. If not specified, will pull whatever docker prefers.
    pull:
      platform: amd64

- name: Pull mysql image
  community.docker.docker_image:
    name: mysql:5.7
    source: pull
    # Select platform for pulling. If not specified, will pull whatever docker prefers.
    pull:
      platform: amd64

- name: Pull the OAI images
  community.docker.docker_image:
    name: "{{ item.name }}"
    repository: "{{ item.tag }}"
    source: pull
    # Select platform for pulling. If not specified, will pull whatever docker prefers.
    pull:
      platform: amd64
  loop:
    - { name: oaisoftwarealliance/oai-amf:develop, tag: oai-amf:develop }
    - { name: oaisoftwarealliance/oai-nrf:develop, tag: oai-nrf:develop }
    - { name: oaisoftwarealliance/oai-spgwu-tiny:develop, tag: oai-spgwu-tiny:develop }
    - { name: oaisoftwarealliance/oai-smf:develop, tag: oai-smf:develop }
    - { name: oaisoftwarealliance/oai-udr:develop, tag: oai-udr:develop }
    - { name: oaisoftwarealliance/oai-udm:develop, tag: oai-udm:develop }
    - { name: oaisoftwarealliance/oai-ausf:develop, tag: oai-ausf:develop }
    - { name: oaisoftwarealliance/oai-upf-vpp:develop, tag: oai-upf-vpp:develop }
    - { name: oaisoftwarealliance/oai-nssf:develop, tag: oai-nssf:develop }
    - { name: oaisoftwarealliance/trf-gen-cn5g:latest, tag: trf-gen-cn5g:latest }

- name: Clone the OAI cn5g repository and checkout to v3.2.0
  ansible.builtin.git:
    repo: 'https://gitlab.eurecom.fr/oai/cn5g/oai-cn5g-fed'
    dest: /home/{{ user }}/oai-cn5g-fed
    recursive: no
    force: yes
    version: 2023.w12

- name: Run installation script
  ansible.builtin.shell: ./scripts/syncComponents.sh
  args:
    chdir: /home/{{ user }}/oai-cn5g-fed
    executable: /bin/bash
  ignore_errors: yes

# copy docker-compose files
- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: "{{ role_path }}/files/docker-compose-basic-nrf-1.yaml"
    dest: /home/{{ user }}/oai-cn5g-fed/docker-compose/

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: "{{ role_path }}/files/docker-compose-gnbsim-1.yaml"
    dest: /home/{{ user }}/oai-cn5g-fed/docker-compose/

- name: Copy database init sql script
  ansible.builtin.copy:
    src: "{{ role_path }}/files/oai_db_load.sql"
    dest: /home/{{ user }}/oai-cn5g-fed/docker-compose/database

- name: sysctl -w net.ipv4.ip_forward=1
  ansible.builtin.command: sysctl -w net.ipv4.ip_forward=1
  become: yes

- name: iptables -P FORWARD ACCEPT
  ansible.builtin.iptables:
    chain: FORWARD
    policy: ACCEPT
  become: yes

# #Login to mysql container once the container is running
# (docker-compose-host)$ docker exec -it mysql /bin/bash
# (mysql-container)$ mysql -uroot -plinux -D oai_db
# mysql> INSERT INTO users VALUES
# (imsi,msisdn,imei,NULL,'PURGED',50,40000000,100000000,47,0000000000,1,key,0,0,0x40,'ebd07771ace8677a',opc);
