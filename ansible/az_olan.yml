# publickey=$(cat ~/.ssh/id_rsa.pub) 
# ansible-playbook ansible/az_olan.yml -i ansible/inventory.ini --extra-vars "ssh_key_data='$publickey' olan_prefix=olanxxx docker_username=xxxx docker_password=xxxx"
# ansible-playbook ansible/plays/az_delete_olan.yml 

# TODO: Make this conditional, with a flag or something on the command
# - name: Include task list in play
#   import_playbook: plays/az_create_olan_loopback_testbed.yml

- name: Test Ping
  hosts:
    - az_trex
    - az_sut
  tasks:
  - action: ping

# - hosts:
#   - az_trex
#   roles:
#     - role: olan_euransim
#       user: ubuntu
#       eth1: eth1
#       eth2: eth2
#       eth1_ip: "{{ hostvars['DUMMY_HOST']['trex_client48_nic_ip'] | default('10.0.2.4') }}"
#       eth1_gw: "{{ hostvars['DUMMY_HOST']['sut_client48_nic_ip'] | default('10.0.2.5') }}"
#       eth2_ip: "{{ hostvars['DUMMY_HOST']['trex_client16_nic_ip'] | default('10.0.3.4') }}"
#       eth2_gw: "{{ hostvars['DUMMY_HOST']['sut_client16_nic_ip'] | default('10.0.3.5') }}"

  # tasks:
  #   - name: Copy the traffic generation scripts
  #     ansible.builtin.copy:
  #       src: files/tgn
  #       dest: /home/azureuser/trex-core/scripts
        
- hosts:
  - az_sut
  
  # tasks: 
  #   - name: Copy the tools for bcc and bpftrace scripts
  #     ansible.builtin.copy:
  #       src: files/tools
  #       dest: /home/ubuntu
  #   - name: Make main.sh executable
  #     ansible.builtin.file:
  #       dest: /home/ubuntu/tools/main.sh
  #       mode: a+x


# # Call the NF and install it using the lifecycle events
# - hosts:
#   - az_sut
#   tasks:

#   - set_fact:
#       events_type: "script"

#   - name: Test the lifecycle events play with script based VNF lifecycle bind9_vnf
#     include: plays/events.yml
#     vars:
#       user: ubuntu
#       vnf_repo: https://github.com/tariromukute/OOB-Server.git
#       vnf_name: OOB-Server
#       vnf_path: /home/azureuser/OOB-Server
#       vnf_version: HEAD

# TODO: Make user a paramater
- hosts:
  - az_trex
  roles:
    # - role: olan_oai_cn5g
    #   user: azureuser
    #   eth1_ip: "{{ hostvars['DUMMY_HOST']['trex_client48_nic_ip'] | default('10.0.2.4') }}"
    #   eth1_gw: "{{ hostvars['DUMMY_HOST']['sut_client48_nic_ip'] | default('10.0.2.5') }}"
    #   eth2_ip: "{{ hostvars['DUMMY_HOST']['trex_client16_nic_ip'] | default('10.0.3.4') }}"
    #   eth2_gw: "{{ hostvars['DUMMY_HOST']['sut_client16_nic_ip'] | default('10.0.3.5') }}"

    # - role: olan_bpftrace
    #   user: ubuntu

    - role: olan_bcc
      user: azureuser

#Install ansible
# - hosts:
#   - az_sut
#   tasks:
#     - name: Install ansible python package
#       pip:
#         name: ansible

# - hosts:
#   - az_trex
#   - az_sut
#   tasks:
#     - name: Collect results
#       include: plays/collect.yml
#       vars:
#         user: azureuser
#         time: 1680 # 27 x 60 + 60
#         duration: 60 
#         aduration: 1700 # 27 x 60 + 60
#         tool: "all"
#         kpps: "{{ item }}"
#       loop:
#         - 1
#         - 10
#         - 50
#         - 100
#         - 200
#         - 300
#         - 400
#         - 500
#         - 600

# - hosts:
#   - az_trex
#   - az_sut
#   tasks:
#     - name: Collect results
#       include: plays/ueransim.yml
#       vars:
#         user: ubuntu
#         duration: 20
#         aduration: 30
#         ues: "{{ item[0] }}"
#         tool: "{{ item[1] }}"
#       with_nested:
#         - [20]
#         - [ "runqlat", "profile", "offcputime", "llcstat", "sys_enter_brk", "page_fault_user", "page_fault_kernel", "vfsstat", "vfssize", "filetop", "cachestat", "biolatency", "netsize", "nettxlat-dev", "soconnect", "skblife", "sormem", "softirqs_count", "softirqs_dist", "hardirqs", "tcpdump" ]

# - hosts:
#   - az_trex
#   - az_sut
#   tasks:
#     - name: Collect results
#       include: plays/open5gs.yml
#       vars:
#         user: ubuntu
#         duration: 25
#         aduration: 35 # duration before the app is forcefully stopped. Should include the 5 seconds wait time for gNB to set up
#         ues: "{{ item[0] }}"
#         tool: "{{ item[1] }}"
#         interval: 0
#       with_nested:
#         - [50, 100, 150, 200, 300 ]
#         - [ "syscount", "sysprocess", "oncpudist", "offcpudist", "profile", "offcputime", "sys_enter_brk", "page_fault_user", 
#             "page_fault_kernel", "drsnoop", "ext4dist", "filetop", "cachestat", "cachetop", "biolatency", "biotop", "bitesize",
#             "iosched", "softirqs_count", "softirqs_dist", "hardirqs_count", "hardirqs_dist", "tcplife", "tcpconnlat", "netsize", "skblife"]

# - hosts:
#   - az_trex
#   - az_sut
#   tasks:
#     - name: Collect results
#       include: plays/oai.yml
#       vars:
#         user: ubuntu
#         duration: 25
#         aduration: 35 # duration before the app is forcefully stopped. Should include the 5 seconds wait time for gNB to set up
#         ues: "{{ item[0] }}"
#         tool: "{{ item[1] }}"
#         interval: 0
#       with_nested:
#         - [50, 100, 150, 200, 300 ]
#         - [ "syscount", "sysprocess", "oncpudist", "offcpudist", "profile", "offcputime", "sys_enter_brk", "page_fault_user", 
#             "page_fault_kernel", "drsnoop", "ext4dist", "filetop", "cachestat", "cachetop", "biolatency", "biotop", "bitesize",
#             "iosched", "softirqs_count", "softirqs_dist", "hardirqs_count", "hardirqs_dist", "tcplife", "tcpconnlat", "netsize", "skblife"]

# - hosts:
#   - az_trex
#   - az_sut
#   tasks:
#     - name: Collect results
#       include: plays/free5gc.yml
#       vars:
#         user: ubuntu
#         duration: 25
#         aduration: 35 # duration before the app is forcefully stopped. Should include the 5 seconds wait time for gNB to set up
#         ues: "{{ item[0] }}"
#         tool: "{{ item[1] }}"
#         interval: 0
#       with_nested:
#         - [50, 100, 150, 200, 300 ]
#         - [ "syscount", "sysprocess", "oncpudist", "offcpudist", "profile", "offcputime", "sys_enter_brk", "page_fault_user", 
#             "page_fault_kernel", "drsnoop", "ext4dist", "filetop", "cachestat", "cachetop", "biolatency", "biotop", "bitesize",
#             "iosched", "softirqs_count", "softirqs_dist", "hardirqs_count", "hardirqs_dist", "tcplife", "tcpconnlat", "netsize", "skblife"]